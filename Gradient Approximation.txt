#==================================
# Generate mock data by simulation
#==================================
n_features=2
n_data=100
set.seed(666)
x1 = rnorm(n_data, 0, 1)     # some continuous variables 
x2 = rnorm(n_data, 0, 1)
z = 1 + 2*x1 + 3*x2        # linear combination with a bias

X<-cbind(rep(1,n_data), x1, x2)  # combine all our parameters in a single matrix

pr = 1/(1+exp(-z))         # our sigmoid/probability function
y = rbinom(length(x1),1,pr)      # bernoulli response variable

model.1 <- glm(y~x1+x2, family="binomial")
theta_true <- coef(model.1)  # the true values of coefficients

theta_init<-rep(0,n_features+1)   # initialize theta


#=====================================
# The Loss Function to be Minimized
#=====================================
Loss<-function(x,y,theta){
 L= sum(x%*%theta+log(1+exp(-x%*%theta))-y*(x%*%theta)) 
 return(L)
}



#==========================================
# Compute the Gradient Numerically
#==========================================

grad_vec<-function(x,y,theta)
{ delx=0.0001
grad_vec=c()
for(i in 1:length(theta))
	{ t_old=theta
	t_new=theta
	t_old[i]=theta[i]-delx
	t_new[i]=theta[i]+delx
	grad_vec[i]=(Loss(x,y,t_new)-Loss(x,y,t_old))/(2*delx)
	}
return(grad_vec)  
}



#==========================
#  Gradient Descent
#==========================

gradient_descent<-function(x,y,theta,alpha,max_iter){
  L_history<-rep(0,max_iter)
  for(i in 1:max_iter){
    theta<-theta-alpha*grad_vec(x,y,theta)  # gradient calculation                                     
    L_history[i]<-Loss(x,y,theta)
  }
  results<-list(theta,L_history)
  return(results)
}


#==========================
#  Now execute 
#==========================

alpha<-0.1
max_iter<-100
results<-gradient_descent(X,y,theta_init,alpha,max_iter)
theta<-results[[1]]   # retrieve theta vector
L_history<-results[[2]]  # retrieve L_history

# compare theta with theta_true

theta_true

theta

# plot Loss function as a function of the iteration number

plot(L_history)

